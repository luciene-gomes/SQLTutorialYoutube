/* Intermediate SQL Tutorial | Having clause

Support websites:
SQL statements: https://www.w3schools.com/sql/sql_intro.asp
Use case scenarios using SQL:https://www.hackerrank.com/products/main/

Today:

HAVING CLAUSE

COMMENTS:
The HAVING clause was added to SQL because the WHERE keyword cannot be used with aggregate functions.

*/

SELECT JobTitle, COUNT(JobTitle)
FROM EMPLOYEE
JOIN EMPLOYEESALARY
	ON EMPLOYEE.EmployeeID = EMPLOYEESALARY.EmployeeID
GROUP BY JobTitle

--CLEANING UP
SELECT JobTitle, COUNT(JobTitle)
FROM EMPLOYEE
JOIN EMPLOYEESALARY
	ON EMPLOYEE.EmployeeID = EMPLOYEESALARY.EmployeeID
WHERE JobTitle IS NOT NULL
GROUP BY JobTitle

--LETS LOOK FOR THE JOB THAT HAS MORE THAN 1 PEOPLE WORKING
SELECT JobTitle, COUNT(JobTitle)
FROM EMPLOYEE
JOIN EMPLOYEESALARY
	ON EMPLOYEE.EmployeeID = EMPLOYEESALARY.EmployeeID
WHERE COUNT(JobTitle) > 1
GROUP BY JobTitle

-- HAVING STATEMENT IS COMPLETELY DEPENDENT ON GROUP BY STATEMENT. SO, HAVING MUST BE PERFORMED AFTER THE AGGREGATION (GROUP BY). 
SELECT JobTitle, COUNT(JobTitle)
FROM EMPLOYEE
JOIN EMPLOYEESALARY
	ON EMPLOYEE.EmployeeID = EMPLOYEESALARY.EmployeeID
HAVING COUNT(JobTitle) > 1
GROUP BY JobTitle

SELECT JobTitle, COUNT(JobTitle)
FROM EMPLOYEE
JOIN EMPLOYEESALARY
	ON EMPLOYEE.EmployeeID = EMPLOYEESALARY.EmployeeID
GROUP BY JobTitle
HAVING COUNT(JobTitle) > 1

SELECT JobTitle, AVG(Salary)
FROM EMPLOYEE
JOIN EMPLOYEESALARY
	ON EMPLOYEE.EmployeeID = EMPLOYEESALARY.EmployeeID
GROUP BY JobTitle
HAVING AVG(Salary) > 45000
ORDER BY AVG(Salary) DESC