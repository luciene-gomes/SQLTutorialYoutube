/* Advanced SQL Tutorial | CTE (Common Table Expression)

Support websites:
SQL statements: https://www.w3schools.com/sql/sql_intro.asp
Use case scenarios using SQL:https://www.hackerrank.com/products/main/

Today:

CTE (Common Table Expression)

COMMENTS:
CTE - a temporary named result set that you can reference within a SELECT, INSERT, UPDATE, or DELETE statement.

-YOU CAN USE IT TO MANIPULATE COMPLEX SUBQUERIES DATA
-THIS ONLY EXISTS IN THE SCOPE OF THE STATEMENT
-CTE IS CREATED IN MEMORY (TEMPORARY PLACE)
-ACTS LIKE A SUBQUERY
*/


WITH CTE_EMPLOYEE AS (

SELECT FirstName, LastName, Gender, Salary
,COUNT(GENDER) OVER (PARTITION BY Gender) AS TotalGender 
,AVG(Salary) OVER (PARTITION BY Salary) AS AVGSalary 
FROM EMPLOYEE AS EMP
JOIN EMPLOYEESALARY AS SAL
	ON EMP.EmployeeID = SAL.EmployeeID
WHERE Salary > 40000

)
SELECT *
FROM CTE_EMPLOYEE
--COMMENTS:
-- WE ARE PUTTING THIS QUERY (DATABASE) IN A TEMPORARY PLACE WHERE WE CAN THEN GO AND GRAB THAT DATA.
-- IT FEELS A LOT LIKE A TEMPORARY TABLE, WE WERE ACTUALLY QUERYING OFF OF A TEMP TABLE BUT IT ACTUALLY ACTS A LOT MORE LIKE A SUBQUERY 
-- WE DON'T NEED TO WRITE THE SELECT STATEMENT MULTIPLE TIMES
-- CTE IS NOT STORED IN ANYWHERE, SO IF I RUN THE ROWS 32 AND 33 IT WILL NOT GONNA WORK. IT WILL GIVE AN ERROR.
-- CTE SELECT SHOULD BE DIRECTLY BELOW THE CTE OTHERWISE IT DOES NOT WORK

--SELECT FirstName, AVGSalary,TotalGender
--FROM CTE_EMPLOYEE
